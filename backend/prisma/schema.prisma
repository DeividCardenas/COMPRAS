// Prisma schema con documentación de modelos y relaciones

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL_LOCAL")
}

/// Modelo que representa a los usuarios del sistema
model Usuario {
  id_usuario Int    @id @default(autoincrement()) @map("id_usuario") // Identificador único del usuario
  username   String @unique @map("nombre_usuario")                   // Nombre de usuario único
  email      String @unique                                          // Correo electrónico único
  password   String                                                  // Contraseña encriptada
  id_rol     Int    @map("rol_id")                                   // ID del rol asociado
  rol        Rol    @relation(fields: [id_rol], references: [id_rol], onDelete: Cascade) // Relación con el rol

  createdAt DateTime @default(now()) @map("fecha_creacion")         // Fecha de creación
  updatedAt DateTime @updatedAt @map("fecha_actualizacion")         // Fecha de última actualización
}

/// Modelo que representa los distintos roles de usuario
model Rol {
  id_rol   Int            @id @default(autoincrement()) @map("id_rol") // Identificador del rol
  nombre   String         @unique                                      // Nombre del rol (único)
  permisos PermisoOnRol[]                                              // Relación con permisos
  usuarios Usuario[]                                                   // Relación con usuarios

  createdAt DateTime @default(now()) @map("fecha_creacion")
  updatedAt DateTime @updatedAt @map("fecha_actualizacion")
}

/// Modelo que representa los permisos del sistema
model Permiso {
  id_permiso Int                  @id @default(autoincrement()) @map("id_permiso") // ID del permiso
  nombre     String               @unique                                           // Nombre único del permiso
  roles      PermisoOnRol[]                                                         // Relación con roles
  tarifarios PermisoOnTarifario[]                                                   // Relación con tarifarios

  createdAt DateTime @default(now()) @map("fecha_creacion")
  updatedAt DateTime @updatedAt @map("fecha_actualizacion")
}

/// Modelo intermedio para la relación muchos-a-muchos entre Rol y Permiso
model PermisoOnRol {
  id_rol     Int      @map("rol_id")
  id_permiso Int      @map("permiso_id")
  rol        Rol      @relation(fields: [id_rol], references: [id_rol], onDelete: Cascade)
  permiso    Permiso  @relation(fields: [id_permiso], references: [id_permiso], onDelete: Cascade)
  createdAt  DateTime @default(now()) @map("fecha_creacion")
  updatedAt  DateTime @updatedAt @map("fecha_actualizacion")

  @@id([id_rol, id_permiso])
}

/// Modelo intermedio para relacionar Tarifarios con Permisos
model PermisoOnTarifario {
  id_permiso   Int       @map("permiso_id")
  id_tarifario Int       @map("tarifario_id")
  descripcion  String                                           // Descripción del permiso aplicado
  permiso      Permiso   @relation(fields: [id_permiso], references: [id_permiso], onDelete: Cascade)
  tarifario    Tarifario @relation(fields: [id_tarifario], references: [id_tarifario], onDelete: Cascade)
  createdAt    DateTime  @default(now()) @map("fecha_creacion")
  updatedAt    DateTime  @updatedAt @map("fecha_actualizacion")

  @@id([id_permiso, id_tarifario])
}

/// Empresas usuarias del sistema
model Empresa {
  id_empresa   Int                    @id @default(autoincrement()) @map("id_empresa") // ID único
  nombre       String                 @unique                                          // Nombre de la empresa
  laboratorios EmpresaOnLaboratorio[]                                                 // Relación con laboratorios
  tarifarios   Tarifario[]                                                            // Tarifarios asociados

  createdAt DateTime @default(now()) @map("fecha_creacion")
  updatedAt DateTime @updatedAt @map("fecha_actualizacion")
}

/// Relación muchos-a-muchos entre Empresas y Laboratorios
model EmpresaOnLaboratorio {
  id_empresa     Int         @map("empresa_id")
  id_laboratorio Int         @map("laboratorio_id")
  empresa        Empresa     @relation(fields: [id_empresa], references: [id_empresa], onDelete: Cascade)
  laboratorio    Laboratorio @relation(fields: [id_laboratorio], references: [id_laboratorio], onDelete: Cascade)
  createdAt      DateTime    @default(now()) @map("fecha_creacion")
  updatedAt      DateTime    @updatedAt @map("fecha_actualizacion")

  @@id([id_empresa, id_laboratorio])
}

/// Laboratorios que producen productos
model Laboratorio {
  id_laboratorio Int    @id @default(autoincrement()) @map("id_laboratorio") // ID del laboratorio
  nombre         String                                                   // Nombre del laboratorio

  productos Producto[]                                                   // Productos que fabrica
  empresas  EmpresaOnLaboratorio[]                                       // Empresas asociadas

  createdAt DateTime @default(now()) @map("fecha_creacion")
  updatedAt DateTime @updatedAt @map("fecha_actualizacion")
}

/// Entidades Promotoras de Salud (EPS)
model EPS {
  id_eps     Int         @id @default(autoincrement()) @map("id_eps") // ID único
  nombre     String      @unique                                      // Nombre de la EPS
  tarifarios Tarifario[]                                              // Tarifarios asociados

  createdAt DateTime @default(now()) @map("fecha_creacion")
  updatedAt DateTime @updatedAt @map("fecha_actualizacion")
}

/// Tarifarios de productos por EPS o Empresa
model Tarifario {
  id_tarifario Int                   @id @default(autoincrement()) @map("id_tarifario") // ID del tarifario
  nombre       String                @unique                                             // Nombre único
  id_eps       Int?                  @map("eps_id")                                     // ID de la EPS (opcional)
  id_empresa   Int?                  @map("empresa_id")                                 // ID de la empresa (opcional)
  eps          EPS?                  @relation(fields: [id_eps], references: [id_eps], onDelete: Cascade)
  empresa      Empresa?              @relation(fields: [id_empresa], references: [id_empresa], onDelete: Cascade)
  productos    TarifarioOnProducto[]                                                   // Productos incluidos
  permisos     PermisoOnTarifario[]                                                    // Permisos asociados

  createdAt DateTime @default(now()) @map("fecha_creacion")
  updatedAt DateTime @updatedAt @map("fecha_actualizacion")
}

/// Relación entre productos y tarifarios (precios definidos por tarifario)
model TarifarioOnProducto {
  id_tarifario   Int       @map("tarifario_id")
  id_producto    Int       @map("producto_id")
  precio         Int                                                   // Precio total del producto
  precio_unidad  Int                                                   // Precio por unidad
  precio_empaque Int                                                   // Precio por empaque
  tarifario      Tarifario @relation(fields: [id_tarifario], references: [id_tarifario], onDelete: Cascade)
  producto       Producto  @relation(fields: [id_producto], references: [id_producto], onDelete: Cascade)
  createdAt      DateTime  @default(now()) @map("fecha_creacion")
  updatedAt      DateTime  @updatedAt @map("fecha_actualizacion")

  @@id([id_tarifario, id_producto])
}

/// Productos registrados en el sistema
model Producto {
  id_producto         Int     @id @default(autoincrement()) @map("id_producto") // ID único
  cum                 String  @unique                                           // Código Único de Medicamento
  descripcion         String                                                   // Descripción del producto
  concentracion       String                                                   // Concentración del principio activo
  presentacion        String                                                   // Presentación del producto
  registro_sanitario  String  @unique                                          // Registro sanitario oficial
  id_laboratorio      Int     @map("laboratorio_id")                           // Laboratorio que lo produce
  precio_unidad       Decimal                                                  // Precio unitario
  precio_presentacion Decimal                                                  // Precio por presentación
  iva                 Decimal                                                  // Valor del IVA
  regulacion          String?                                                  // Régimen de regulación (si aplica)
  codigo_barras       String  @unique                                          // Código de barras único

  laboratorio         Laboratorio           @relation(fields: [id_laboratorio], references: [id_laboratorio])
  tarifarios          TarifarioOnProducto[]

  createdAt          DateTime @default(now()) @map("fecha_creacion")
  updatedAt          DateTime @updatedAt @map("fecha_actualizacion")
}

/// Proveedores (nuevo modelo para persistir proveedores creados desde la UI)
model Proveedor {
  id_proveedor Int      @id @default(autoincrement()) @map("id_proveedor")
  laboratorio  String?
  tipo         String?
  titular      String?
  direccion    String?
  telefono     String?
  email        String?
  creado_en    DateTime @default(now()) @map("creado_en")

  @@map("proveedores")
}
